1장.
컴퓨터 시스템의 4가지 구성요소 : 하드웨어, 응용 프로그램, 사용자, 운영체제
컴퓨터 상에서 항상 실행되는 프로그램 : 커널 kernel
전원이 켜지거나 재부트(reboot)될 때 실행되는 초기 프로그램 : 부트스트랩 프로그램
모든 CPU의 캐시에 가장 최근의 값을 가지도록 하드웨어가 보장해야 하는 것 : 캐시 일관성
전송 중 데이터를 임시 저장 : 버퍼링
데이터의 일부를 고속의 저장장치에 저장 : 캐싱
한 작업의 출력을 다른 작업의 입력과 중첩 : *스풀링
클라이언트와 서버가 서로 구별되지 않음 : peer to peer P2P

2장.
동일한 컴퓨터 또는 네트워크에 연결된 컴퓨터 상에서 한 프로세스가 다른 프로세서와 정보를 교환하는 수단 : 통신
운영체제가 수행할 명령어를 직접 입력하는 수단 제공 : 명령어 인터프리터 CLI
선택할 수 있는 여러 명령어 인터프리터를 제공하는 시스템 : 셀 shell
운영체제에 의해 사용 가능하게 된 서비스에 대한 인터페이스를 제공하는 것 : 시스템 콜
프로그램이 직접 시스템 콜을 사용하지 않고, 이것을 거쳐서 접근 : 응용 프로그래밍 인터페이스
시스템을 위한 API 이름 : POSIX
프로세스간 공유 데이터 접근을 관리하는 것 : 락
어떤 일을 어떻게(how) 할 것인가 : 매커니즘(기법)
무엇(what)을 할 것인가 : 정책
특정한 구조 없이 커널의 모든 기능을 단일 주소 공간에서 실행되는 단일 정적 이진 파일로 구현 : 모노리식 구조
모든 중요치 않은 구성 요소를 커널로부터 제거하고, 그들을 시스템 및 사용자 수준 프로그램으로 구현하여 운영체제를 구성 : 마이크로커널
오류를 발견하고 수정하는 행위 : 디버깅
이 현상을 제거하여 성능을 향상 : 병목
리눅스에서 프로그램의 실행을 추적하는 디버깅 툴 : strace

3장.
수동적인 존재와 능동적인 존재 : 프로그램, 프로세스
프로세스 상태 다이어그램
new->ready : admitted
ready->running : scheduler dispatch
waiting->ready : 
running->ready
running->terminated
running->waiting
특정 프로세스와 연관된 여러 정보를 수록 : 프로세스 제어 블록 PCB
CPU를 다른 프로세스로 교환하려면 현재 프로세스의 상태를 보관하고 새로운 프로세스의 보관된 상태를 복구하는 작업 : Context Switch 문맥 교환
fork()란? : 새로운 프로세스를 생성하는 시스템 콜
exec()란? : 자신의 메모리 공간을 새로운 프로그램으로 바꾸는 시스템 콜
부모 프로세스가 자식들 중 하나의 실행을 종료하는 시스템 콜 함수 : abort()
부모가 exit한 후 자식도 exit 되는 것 : 연속적 종료 cascading termination
협력적 프로세스들은 데이터와 정보를 교환할 수 있는 기법 : 병행 프로세스
프로세스에게 메시지를 전송 : send()
프로세스로부터 메시지를 수신 : receive()
두 개의 프로세스가 서로 통신 가능하도록 전달자 역할을 함 : 파이프

4장.
CPU 이용의 기본 단위 : 스레드
스레드의 구성요소 4개 : 스레드ID PID, PC 프로그램 카운터, 레지스터집합, 스택
다중 스레드 장점 4개 : 응답성, 자원 공유, 경제성, 규모 적응성
POSIX가 스레드 생성과 동기화를 위해 제정한 표준 API : Pthread
프로세스를 시작할 때 아얘 일정한 수의 스레드들을 미리 생성하고 대기 : 풀 pool 
프로세스에게 어떤 사건이 일아났음을 알려주기 위해 사용 : sign 신호
한 스레드가 즉시 목적 스레드를 강제 종료 하는 것 : 비동기식 취소
목적 스레드가 주기적으로 자신이 강제 종료되어야 할지를 점검 : 지연 취소
스레드 자신만 접근 가능한 데이터를 허용 : 스레드-국지 저장소 Thread-Local Storage

5장.
CPU 이용률을 최대화 하기 위해 항상 실행중인 프로세스를 유지해야 함 : 다중 프로그래밍
실행 준비가 되어 있는 메모리 내의 프로세스들 중에서 선택하여, 이들 중 하나에게 CPU를 할당 : 단기 스케줄러
CPU의 제어를 단기 스케줄러가 선택한 프로세스에게 주는 모듈 : 디스패처 Dispatcher
선입 선처리 스케줄링이란? : 선입된 프로세스를 우선 처리하는 스케줄링
최단 작업 우선 스케줄링이란?
비선점형 : 선입된 프로세스들 중 가장 짧은 버스트를 가진 프로세스를 우선 처리하는 스케줄링
선점형 : 선입된 프로세스보다 짧은 버스트를 가진 프로세스가 있으면, 교환 후 처리하는 스케줄링
우선순위 스케줄링이란? : 우선순위가 붙은 프로세스가 먼저 스케줄링 되는 것
라운드 로빈 스케줄링이란? : 시간 할당량마다 가장 짧은 버스트를 가진 프로세스를 처리하는 스케줄링
다단계 큐 스케줄링이란? : 준비 완료 큐를 다수의 별도의 큐로 분류
다단계 피드백 큐 스케줄링이란? : 프로세스가 큐 사이를 이동하는 것을 허용
비대칭 다중 처리 : 주 서버라는 하나의 처리기가 모든 스케줄링 결정과 입/출력 처리
대칭 다중 처리 : 각 처리기가 독자적으로 스케줄링
SMP 시스템의 모든 처리기 사이에 부하가 고르게 배분되도록 시도 : 부하 균등화

끝.